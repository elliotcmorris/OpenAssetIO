name: Build Wheels

on: [workflow_dispatch, push]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.config.os }} - ${{matrix.python-build}}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
          - os: ubuntu-20.04
            shell: bash
          - os: macos-10.15
            shell: bash
          - os: windows-2019
            preamble: call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat" x64
            shell: cmd
          # These are the platform build strings provided to cibuildwheel, with wildcarding.
          # See https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
        python-build: ['cp39*64', 'cp310*64']
         # - os: macos-10.15
    defaults:
      run:
        # Annoyingly required here since `matrix` isn't available in
        # the `shell` property of individual steps.
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v3

      - name: Bootstrap
        uses: ./.github/bootstrap_platform

      - name: Build wheels
        run: |
          ${{ matrix.config.preamble }}
          pip install cibuildwheel
          cibuildwheel --output-dir wheelhouse
        env: 
          # Windows + Mac runs use this environment variable, as they execute directly
          # on the runner. Linux runs are somewhat different, and are containerised fully,
          # therefore they get their toolchain path from pyproject.toml
          CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/.conan/conan_paths.cmake
          CIBW_BUILD: ${{ matrix.python-build }}
          CIBW_SKIP: '*musllinux* *arm64*'
          PIP_VERBOSE: 1

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl